{"ast":null,"code":"const API_BASE_URL = \"http://127.0.0.1:5000/api\"; // Use IP 127.0.0.1 or localhost\n\nexport const fetchDashboardStats = async () => {\n  const response = await fetch(`${API_BASE_URL}/dashboard`);\n  return response.json();\n};\nexport const fetchUsers = async () => {\n  const response = await fetch(`${API_BASE_URL}/users`);\n  return response.json();\n};\nexport const fetchAccounts = async () => {\n  const response = await fetch(`${API_BASE_URL}/accounts`);\n  return response.json();\n};\nexport const fetchTransactions = async () => {\n  const response = await fetch(`${API_BASE_URL}/transactions`);\n  return response.json();\n};\nexport const fetchFraudRules = async () => {\n  const response = await fetch(`${API_BASE_URL}/fraud-rules`);\n  return response.json();\n};\nexport const fetchFraudLogs = async () => {\n  const response = await fetch(`${API_BASE_URL}/fraud-logs`);\n  return response.json();\n};\nexport const resolveFraud = async logId => {\n  const response = await fetch(`${API_BASE_URL}/resolve/${logId}`, {\n    method: \"POST\"\n  });\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","fetchDashboardStats","response","fetch","json","fetchUsers","fetchAccounts","fetchTransactions","fetchFraudRules","fetchFraudLogs","resolveFraud","logId","method"],"sources":["C:/Users/Lenovo/Desktop/db/updated/fraud-detection-frontend/src/api/service.js"],"sourcesContent":["const API_BASE_URL = \"http://127.0.0.1:5000/api\"; // Use IP 127.0.0.1 or localhost\r\n\r\nexport const fetchDashboardStats = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/dashboard`);\r\n  return response.json();\r\n};\r\n\r\nexport const fetchUsers = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/users`);\r\n  return response.json();\r\n};\r\n\r\nexport const fetchAccounts = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/accounts`);\r\n  return response.json();\r\n};\r\n\r\nexport const fetchTransactions = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/transactions`);\r\n  return response.json();\r\n};\r\n\r\nexport const fetchFraudRules = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/fraud-rules`);\r\n  return response.json();\r\n};\r\n\r\nexport const fetchFraudLogs = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/fraud-logs`);\r\n  return response.json();\r\n};\r\n\r\nexport const resolveFraud = async (logId) => {\r\n  const response = await fetch(`${API_BASE_URL}/resolve/${logId}`, {\r\n    method: \"POST\",\r\n  });\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,YAAY,CAAC;EACzD,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMH,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,QAAQ,CAAC;EACrD,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,WAAW,CAAC;EACxD,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,eAAe,CAAC;EAC5D,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,cAAc,CAAC;EAC3D,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,aAAa,CAAC;EAC1D,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMM,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,YAAYW,KAAK,EAAE,EAAE;IAC/DC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAOV,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}