{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\db\\\\updated\\\\fraud-detection-frontend\\\\src\\\\pages\\\\FraudLogs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, Button } from \"@mui/material\";\nimport { fetchFraudLogs, resolveFraud } from \"../api/service\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FraudLogs = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const loadFraudLogs = () => {\n    fetchFraudLogs().then(data => setLogs(data));\n  };\n  useEffect(() => {\n    loadFraudLogs();\n  }, []);\n  const handleResolve = logId => {\n    resolveFraud(logId).then(res => {\n      toast.success(\"Incident marked as resolved\");\n      loadFraudLogs();\n    }).catch(err => {\n      toast.error(\"Error updating incident\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Fraudulent Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"fraud logs table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Log ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Transaction ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Detected Rule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: logs.map(log => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.log_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.transaction_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.detected_rule\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"$\", log.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.transaction_time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: log.status === \"pending\" && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleResolve(log.log_id),\n                children: \"Resolve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, log.log_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(FraudLogs, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = FraudLogs;\nexport default FraudLogs;\nvar _c;\n$RefreshReg$(_c, \"FraudLogs\");","map":{"version":3,"names":["React","useEffect","useState","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Button","fetchFraudLogs","resolveFraud","ToastContainer","toast","jsxDEV","_jsxDEV","FraudLogs","_s","logs","setLogs","loadFraudLogs","then","data","handleResolve","logId","res","success","catch","err","error","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","map","log","log_id","transaction_id","detected_rule","amount","transaction_time","status","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/db/updated/fraud-detection-frontend/src/pages/FraudLogs.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, Button } from \"@mui/material\";\r\nimport { fetchFraudLogs, resolveFraud } from \"../api/service\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst FraudLogs = () => {\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  const loadFraudLogs = () => {\r\n    fetchFraudLogs().then((data) => setLogs(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFraudLogs();\r\n  }, []);\r\n\r\n  const handleResolve = (logId) => {\r\n    resolveFraud(logId)\r\n      .then((res) => {\r\n        toast.success(\"Incident marked as resolved\");\r\n        loadFraudLogs();\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Error updating incident\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Fraudulent Transactions\r\n      </Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"fraud logs table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Log ID</TableCell>\r\n              <TableCell>Transaction ID</TableCell>\r\n              <TableCell>Detected Rule</TableCell>\r\n              <TableCell>Amount</TableCell>\r\n              <TableCell>Time</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {logs.map((log) => (\r\n              <TableRow key={log.log_id}>\r\n                <TableCell>{log.log_id}</TableCell>\r\n                <TableCell>{log.transaction_id}</TableCell>\r\n                <TableCell>{log.detected_rule}</TableCell>\r\n                <TableCell>${log.amount}</TableCell>\r\n                <TableCell>{log.transaction_time}</TableCell>\r\n                <TableCell>{log.status}</TableCell>\r\n                <TableCell>\r\n                  {log.status === \"pending\" && (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => handleResolve(log.log_id)}\r\n                    >\r\n                      Resolve\r\n                    </Button>\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FraudLogs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}